package admin.controller;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.List;
import java.util.Map;

import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import admin.service.AdminServiceImpl;
import admin.service.IAdminService;
import vo.MemberVO;
import vo.ServiceVO;

public class AdminController extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private IAdminService service;
	
	@Override
	public void init(ServletConfig config) throws ServletException {
		service = AdminServiceImpl.getInstance();
	}

    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    	request.setCharacterEncoding("UTF-8");
		response.setCharacterEncoding("UTF-8");
		response.setContentType("text/html; charset=utf-8");
		
		String requestURI = request.getRequestURI();
		String contextPath = request.getContextPath();
		String command = requestURI.substring(contextPath.length());
		
	    //서비스 승인할 리스트를 가져오는 메서드
	     if(command.equals("/admin/serviceApprovedlist.do")){
	    	  serviceApprovedlist(request,response);
	      }
	      
	     
	     //관리자가 서비스를 승인해줄 메서드
	     if(command.equals("/admin/serviceApproved.do")){
	    	 serviceApproved(request,response);
	      }
	     
		 //관리자가 승인된 서비스 목록을 조회하시는 메서드
	     if(command.equals("/admin/serviceApprovedConfirmlist.do")){
	    	 serviceApprovedConfirmlist(request,response);
	     }
	      
		 //관리자가 회원목록을 조회하시는 메서드
		    if(command.equals("/admin/selectMemberlist.do")){
		    	selectMemberlist(request,response);
		    }
		    	 
		     
	}
    
	 //관리자가 승인된 서비스 목록을 조회하는 메서드
    private void serviceApprovedConfirmlist(HttpServletRequest request, HttpServletResponse response) {
    	List<Map<String,Object>> list  = service.serviceApprovedConfirmlist();
    	System.out.println("list"+list);
		request.setAttribute("serviceApprovedConfirmlist", list);
		
		 try {
			request.getRequestDispatcher("/WEB-INF/view/admin/serviceApprovedConfirm.jsp").forward(request,response);
		} catch (ServletException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		
	}

	private void selectMemberlist(HttpServletRequest request, HttpServletResponse response) {
		List<MemberVO> memberlist =  service.selectMemberlist();
    	request.setAttribute("memberlist", memberlist);
    	
    	try {
			request.getRequestDispatcher("/WEB-INF/view/admin/memberList.jsp").forward(request, response);
		} catch (ServletException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	//관리자가 서비스를 승인해줄 메서드
    private void serviceApproved(HttpServletRequest request, HttpServletResponse response) {
		
		int serviceNo = Integer.parseInt(request.getParameter("serviceNo")); 
		System.out.println(serviceNo);
    	int res = service.serviceApproved(serviceNo);

    	PrintWriter out;
		try {
			out = response.getWriter();
			out.print(res);
			out.flush();
		} catch (IOException e) {
			e.printStackTrace();
		}
    	
	}

	//서비스 승인할 리스트를 가져오는 메서드
	private void serviceApprovedlist(HttpServletRequest request, HttpServletResponse response) {
		
		List<Map<String,Object>> list  = service.serviceApprovedlist();
		request.setAttribute("serviceApprovedlist", list);
		
		 try {
			request.getRequestDispatcher("/WEB-INF/view/admin/serviceApproved.jsp").forward(request,response);
		} catch (ServletException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		 
		
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		request.setCharacterEncoding("UTF-8");
		response.setCharacterEncoding("UTF-8");
		response.setContentType("text/html; charset=utf-8");
		
		String requestURI = request.getRequestURI();
		String contextPath = request.getContextPath();
		String command = requestURI.substring(contextPath.length());
		
		switch(command) {
		case "/member/join.do":	// 회원가입 페이지로 이동
			request.getRequestDispatcher("/WEB-INF/view/member/join.jsp").forward(request, response);
			break;
		}
	}

}
